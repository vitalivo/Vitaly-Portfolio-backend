# Generated by Django 4.2.7 on 2025-08-01 10:47

import apps.core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "slug",
                    models.SlugField(max_length=255, unique=True, verbose_name="Slug"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                ("name_en", models.CharField(max_length=100, verbose_name="Name (EN)")),
                (
                    "name_ru",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Name (RU)"
                    ),
                ),
                (
                    "name_he",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Name (HE)"
                    ),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, verbose_name="Description (EN)"),
                ),
                (
                    "description_ru",
                    models.TextField(blank=True, verbose_name="Description (RU)"),
                ),
                (
                    "description_he",
                    models.TextField(blank=True, verbose_name="Description (HE)"),
                ),
                (
                    "icon",
                    models.CharField(blank=True, max_length=50, verbose_name="Icon"),
                ),
                (
                    "color",
                    models.CharField(blank=True, max_length=20, verbose_name="Color"),
                ),
                ("order", models.PositiveIntegerField(default=0, verbose_name="Order")),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="children",
                        to="blog.category",
                        verbose_name="Parent Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Subscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email"
                    ),
                ),
                (
                    "name",
                    models.CharField(blank=True, max_length=100, verbose_name="Name"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "confirmed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Confirmed At"
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[("en", "English"), ("ru", "Русский"), ("he", "עברית")],
                        default="en",
                        max_length=10,
                        verbose_name="Language",
                    ),
                ),
                (
                    "token",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Confirmation Token"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP Address"
                    ),
                ),
            ],
            options={
                "verbose_name": "Subscription",
                "verbose_name_plural": "Subscriptions",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "slug",
                    models.SlugField(max_length=255, unique=True, verbose_name="Slug"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                ("name_en", models.CharField(max_length=100, verbose_name="Name (EN)")),
                (
                    "name_ru",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Name (RU)"
                    ),
                ),
                (
                    "name_he",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Name (HE)"
                    ),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, verbose_name="Description (EN)"),
                ),
                (
                    "description_ru",
                    models.TextField(blank=True, verbose_name="Description (RU)"),
                ),
                (
                    "description_he",
                    models.TextField(blank=True, verbose_name="Description (HE)"),
                ),
                (
                    "color",
                    models.CharField(blank=True, max_length=20, verbose_name="Color"),
                ),
            ],
            options={
                "verbose_name": "Tag",
                "verbose_name_plural": "Tags",
                "ordering": ["name_en"],
            },
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "meta_title",
                    models.CharField(
                        blank=True, max_length=60, verbose_name="Meta Title"
                    ),
                ),
                (
                    "meta_description",
                    models.CharField(
                        blank=True, max_length=160, verbose_name="Meta Description"
                    ),
                ),
                (
                    "meta_keywords",
                    models.TextField(blank=True, verbose_name="Meta Keywords"),
                ),
                (
                    "slug",
                    models.SlugField(max_length=255, unique=True, verbose_name="Slug"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "published_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Published At"
                    ),
                ),
                (
                    "views_count",
                    models.PositiveIntegerField(default=0, verbose_name="Views Count"),
                ),
                (
                    "is_featured",
                    models.BooleanField(default=False, verbose_name="Is Featured"),
                ),
                (
                    "featured_order",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Featured Order"
                    ),
                ),
                (
                    "title_en",
                    models.CharField(max_length=200, verbose_name="Title (EN)"),
                ),
                (
                    "title_ru",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Title (RU)"
                    ),
                ),
                (
                    "title_he",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Title (HE)"
                    ),
                ),
                (
                    "subtitle_en",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Subtitle (EN)"
                    ),
                ),
                (
                    "subtitle_ru",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Subtitle (RU)"
                    ),
                ),
                (
                    "subtitle_he",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Subtitle (HE)"
                    ),
                ),
                (
                    "excerpt_en",
                    models.TextField(blank=True, verbose_name="Excerpt (EN)"),
                ),
                (
                    "excerpt_ru",
                    models.TextField(blank=True, verbose_name="Excerpt (RU)"),
                ),
                (
                    "excerpt_he",
                    models.TextField(blank=True, verbose_name="Excerpt (HE)"),
                ),
                ("content_en", models.TextField(verbose_name="Content (EN)")),
                (
                    "content_ru",
                    models.TextField(blank=True, verbose_name="Content (RU)"),
                ),
                (
                    "content_he",
                    models.TextField(blank=True, verbose_name="Content (HE)"),
                ),
                (
                    "thumbnail",
                    models.ImageField(
                        upload_to=apps.core.models.get_image_upload_path,
                        verbose_name="Thumbnail",
                    ),
                ),
                (
                    "cover_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=apps.core.models.get_image_upload_path,
                        verbose_name="Cover Image",
                    ),
                ),
                (
                    "read_time",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Read Time (minutes)"
                    ),
                ),
                (
                    "allow_comments",
                    models.BooleanField(default=True, verbose_name="Allow Comments"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Author",
                    ),
                ),
                (
                    "categories",
                    models.ManyToManyField(
                        related_name="posts",
                        to="blog.category",
                        verbose_name="Categories",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        related_name="posts", to="blog.tag", verbose_name="Tags"
                    ),
                ),
            ],
            options={
                "verbose_name": "Post",
                "verbose_name_plural": "Posts",
                "ordering": ["-published_at", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "author_name",
                    models.CharField(max_length=100, verbose_name="Author Name"),
                ),
                (
                    "author_email",
                    models.EmailField(max_length=254, verbose_name="Author Email"),
                ),
                (
                    "author_website",
                    models.URLField(blank=True, verbose_name="Author Website"),
                ),
                ("content", models.TextField(verbose_name="Content")),
                (
                    "is_approved",
                    models.BooleanField(default=False, verbose_name="Is Approved"),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP Address"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="User Agent")),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="replies",
                        to="blog.comment",
                        verbose_name="Parent Comment",
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="blog.post",
                        verbose_name="Post",
                    ),
                ),
            ],
            options={
                "verbose_name": "Comment",
                "verbose_name_plural": "Comments",
                "ordering": ["-created_at"],
            },
        ),
    ]
