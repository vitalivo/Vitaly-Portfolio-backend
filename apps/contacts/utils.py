import smtplib
import requests
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from django.conf import settings
from django.template.loader import render_to_string
from django.utils.html import strip_tags
import logging

logger = logging.getLogger(__name__)

def send_email_notification(contact_message):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ Gmail SMTP
    """
    try:
        # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        msg = MIMEMultipart('alternative')
        msg['Subject'] = f"üîî –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {contact_message.name}"
        msg['From'] = settings.GMAIL_USER
        msg['To'] = settings.GMAIL_USER  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–µ–±–µ
        
        # HTML –≤–µ—Ä—Å–∏—è –ø–∏—Å—å–º–∞
        html_content = f"""
        <html>
        <body style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
            <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 20px; border-radius: 10px 10px 0 0;">
                <h2 style="color: white; margin: 0;">üì¨ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ</h2>
            </div>
            
            <div style="background: #f8f9fa; padding: 20px; border-radius: 0 0 10px 10px; border: 1px solid #e9ecef;">
                <div style="background: white; padding: 20px; border-radius: 8px; margin-bottom: 15px;">
                    <h3 style="color: #495057; margin-top: 0;">üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å</h3>
                    <p><strong>–ò–º—è:</strong> {contact_message.name}</p>
                    <p><strong>Email:</strong> <a href="mailto:{contact_message.email}">{contact_message.email}</a></p>
                </div>
                
                <div style="background: white; padding: 20px; border-radius: 8px; margin-bottom: 15px;">
                    <h3 style="color: #495057; margin-top: 0;">üìù –°–æ–æ–±—â–µ–Ω–∏–µ</h3>
                    <p><strong>–¢–µ–º–∞:</strong> {contact_message.subject}</p>
                    <div style="background: #f8f9fa; padding: 15px; border-radius: 5px; border-left: 4px solid #007bff;">
                        <p style="margin: 0; line-height: 1.6;">{contact_message.message}</p>
                    </div>
                </div>
                
                <div style="background: white; padding: 20px; border-radius: 8px;">
                    <h3 style="color: #495057; margin-top: 0;">‚è∞ –î–µ—Ç–∞–ª–∏</h3>
                    <p><strong>–î–∞—Ç–∞:</strong> {contact_message.created_at.strftime('%d.%m.%Y –≤ %H:%M')}</p>
                    <p><strong>ID —Å–æ–æ–±—â–µ–Ω–∏—è:</strong> #{contact_message.id}</p>
                </div>
                
                <div style="text-align: center; margin-top: 20px;">
                    <a href="http://127.0.0.1:8000/admin/contacts/contactmessage/{contact_message.id}/change/" 
                       style="background: #007bff; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; display: inline-block;">
                        üìã –û—Ç–∫—Ä—ã—Ç—å –≤ –∞–¥–º–∏–Ω–∫–µ
                    </a>
                </div>
            </div>
            
            <div style="text-align: center; margin-top: 20px; color: #6c757d; font-size: 12px;">
                <p>–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –í–∏—Ç–∞–ª–∏—è</p>
            </div>
        </body>
        </html>
        """
        
        # –¢–µ–∫—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è
        text_content = f"""
üîî –ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï –° –ü–û–†–¢–§–û–õ–ò–û

üë§ –û–¢–ü–†–ê–í–ò–¢–ï–õ–¨:
–ò–º—è: {contact_message.name}
Email: {contact_message.email}

üìù –°–û–û–ë–©–ï–ù–ò–ï:
–¢–µ–º–∞: {contact_message.subject}
–¢–µ–∫—Å—Ç: {contact_message.message}

‚è∞ –î–ï–¢–ê–õ–ò:
–î–∞—Ç–∞: {contact_message.created_at.strftime('%d.%m.%Y –≤ %H:%M')}
ID: #{contact_message.id}

–ê–¥–º–∏–Ω–∫–∞: http://127.0.0.1:8000/admin/contacts/contactmessage/{contact_message.id}/change/
        """
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±–µ –≤–µ—Ä—Å–∏–∏
        part1 = MIMEText(text_content, 'plain', 'utf-8')
        part2 = MIMEText(html_content, 'html', 'utf-8')
        
        msg.attach(part1)
        msg.attach(part2)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ Gmail SMTP
        with smtplib.SMTP('smtp.gmail.com', 587) as server:
            server.starttls()
            server.login(settings.GMAIL_USER, settings.GMAIL_APP_PASSWORD)
            server.send_message(msg)
            
        logger.info(f"Email notification sent for contact message: {contact_message.id}")
        return True
        
    except Exception as e:
        logger.error(f"Failed to send email notification: {str(e)}")
        return False

def send_telegram_notification(contact_message):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    """
    try:
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
        message = f"""
üîî <b>–ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï –° –ü–û–†–¢–§–û–õ–ò–û</b>

üë§ <b>–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:</b>
‚Ä¢ <b>–ò–º—è:</b> {contact_message.name}
‚Ä¢ <b>Email:</b> <code>{contact_message.email}</code>

üìù <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b>
‚Ä¢ <b>–¢–µ–º–∞:</b> {contact_message.subject}
‚Ä¢ <b>–¢–µ–∫—Å—Ç:</b> 
<blockquote>{contact_message.message}</blockquote>

‚è∞ <b>–î–µ—Ç–∞–ª–∏:</b>
‚Ä¢ <b>–î–∞—Ç–∞:</b> {contact_message.created_at.strftime('%d.%m.%Y –≤ %H:%M')}
‚Ä¢ <b>ID:</b> #{contact_message.id}

üîó <a href="http://127.0.0.1:8000/admin/contacts/contactmessage/{contact_message.id}/change/">–û—Ç–∫—Ä—ã—Ç—å –≤ –∞–¥–º–∏–Ω–∫–µ</a>
        """
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ Telegram Bot API
        url = f"https://api.telegram.org/bot{settings.TELEGRAM_BOT_TOKEN}/sendMessage"
        
        payload = {
            'chat_id': settings.TELEGRAM_CHAT_ID,
            'text': message,
            'parse_mode': 'HTML',
            'disable_web_page_preview': True
        }
        
        response = requests.post(url, json=payload, timeout=10)
        response.raise_for_status()
        
        logger.info(f"Telegram notification sent for contact message: {contact_message.id}")
        return True
        
    except Exception as e:
        logger.error(f"Failed to send Telegram notification: {str(e)}")
        return False

def send_contact_notification(contact_message):
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (Email + Telegram)
    """
    results = {
        'email': False,
        'telegram': False
    }
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º Email
    results['email'] = send_email_notification(contact_message)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º Telegram
    results['telegram'] = send_telegram_notification(contact_message)
    
    # –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    if results['email'] and results['telegram']:
        logger.info(f"All notifications sent successfully for message: {contact_message.id}")
    elif results['email'] or results['telegram']:
        logger.warning(f"Partial notification success for message: {contact_message.id} - Email: {results['email']}, Telegram: {results['telegram']}")
    else:
        logger.error(f"All notifications failed for message: {contact_message.id}")
    
    return results
