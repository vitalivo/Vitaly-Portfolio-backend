# Generated by Django 4.2.7 on 2025-08-01 10:47

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="DailyStatistics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(unique=True, verbose_name="Date")),
                (
                    "page_views",
                    models.PositiveIntegerField(default=0, verbose_name="Page Views"),
                ),
                (
                    "unique_visitors",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Unique Visitors"
                    ),
                ),
                (
                    "new_visitors",
                    models.PositiveIntegerField(default=0, verbose_name="New Visitors"),
                ),
                (
                    "avg_session_duration",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Average Session Duration (seconds)"
                    ),
                ),
                (
                    "bounce_rate",
                    models.FloatField(default=0.0, verbose_name="Bounce Rate"),
                ),
                (
                    "top_pages",
                    models.JSONField(blank=True, null=True, verbose_name="Top Pages"),
                ),
                (
                    "top_referrers",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Top Referrers"
                    ),
                ),
                (
                    "devices",
                    models.JSONField(blank=True, null=True, verbose_name="Devices"),
                ),
                (
                    "browsers",
                    models.JSONField(blank=True, null=True, verbose_name="Browsers"),
                ),
                (
                    "countries",
                    models.JSONField(blank=True, null=True, verbose_name="Countries"),
                ),
            ],
            options={
                "verbose_name": "Daily Statistics",
                "verbose_name_plural": "Daily Statistics",
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "category",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Category"
                    ),
                ),
                ("data", models.JSONField(blank=True, null=True, verbose_name="Data")),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP Address"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="User Agent")),
                (
                    "session_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Session ID"
                    ),
                ),
                (
                    "visitor_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Visitor ID"
                    ),
                ),
                (
                    "path",
                    models.CharField(blank=True, max_length=255, verbose_name="Path"),
                ),
            ],
            options={
                "verbose_name": "Event",
                "verbose_name_plural": "Events",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PageView",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "path",
                    models.CharField(default="/", max_length=255, verbose_name="Path"),
                ),
                (
                    "query_params",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Query Parameters"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP Address"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="User Agent")),
                ("referrer", models.URLField(blank=True, verbose_name="Referrer")),
                (
                    "language",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Language"
                    ),
                ),
                (
                    "session_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Session ID"
                    ),
                ),
                (
                    "visitor_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Visitor ID"
                    ),
                ),
                (
                    "duration",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Duration (seconds)"
                    ),
                ),
                ("is_bot", models.BooleanField(default=False, verbose_name="Is Bot")),
                (
                    "is_mobile",
                    models.BooleanField(default=False, verbose_name="Is Mobile"),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Country"
                    ),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, verbose_name="City"),
                ),
            ],
            options={
                "verbose_name": "Page View",
                "verbose_name_plural": "Page Views",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Visitor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "visitor_id",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Visitor ID"
                    ),
                ),
                (
                    "first_visit_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="First Visit At"
                    ),
                ),
                (
                    "last_visit_at",
                    models.DateTimeField(auto_now=True, verbose_name="Last Visit At"),
                ),
                (
                    "visits_count",
                    models.PositiveIntegerField(default=1, verbose_name="Visits Count"),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP Address"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="User Agent")),
                (
                    "browser",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Browser"
                    ),
                ),
                (
                    "os",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Operating System"
                    ),
                ),
                (
                    "device",
                    models.CharField(blank=True, max_length=100, verbose_name="Device"),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Country"
                    ),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, verbose_name="City"),
                ),
                (
                    "language",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Language"
                    ),
                ),
                (
                    "referrer",
                    models.URLField(blank=True, verbose_name="First Referrer"),
                ),
                ("is_bot", models.BooleanField(default=False, verbose_name="Is Bot")),
            ],
            options={
                "verbose_name": "Visitor",
                "verbose_name_plural": "Visitors",
                "ordering": ["-last_visit_at"],
            },
        ),
        migrations.CreateModel(
            name="VisitorSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "session_id",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Session ID"
                    ),
                ),
                (
                    "start_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="Start Time"),
                ),
                (
                    "end_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="End Time"
                    ),
                ),
                (
                    "duration",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Duration (seconds)"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP Address"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="User Agent")),
                (
                    "entry_page",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Entry Page"
                    ),
                ),
                (
                    "exit_page",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Exit Page"
                    ),
                ),
                (
                    "pages_viewed",
                    models.PositiveIntegerField(default=0, verbose_name="Pages Viewed"),
                ),
                ("referrer", models.URLField(blank=True, verbose_name="Referrer")),
                (
                    "is_bounce",
                    models.BooleanField(default=True, verbose_name="Is Bounce"),
                ),
                (
                    "visitor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sessions",
                        to="analytics.visitor",
                        verbose_name="Visitor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Visitor Session",
                "verbose_name_plural": "Visitor Sessions",
                "ordering": ["-start_time"],
            },
        ),
    ]
